/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.StudentRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Student extends TableImpl<StudentRecord> {

	private static final long serialVersionUID = -1823059301;

	/**
	 * The reference instance of <code>cbis.student</code>
	 */
	public static final Student STUDENT = new Student();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<StudentRecord> getRecordType() {
		return StudentRecord.class;
	}

	/**
	 * The column <code>cbis.student.id</code>.
	 */
	public final TableField<StudentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.student.student_number</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_NUMBER = createField("student_number", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

	/**
	 * The column <code>cbis.student.student_name</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_NAME = createField("student_name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>cbis.student.grade_id</code>.
	 */
	public final TableField<StudentRecord, Integer> GRADE_ID = createField("grade_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.student.student_phone</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_PHONE = createField("student_phone", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>cbis.student.student_email</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_EMAIL = createField("student_email", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>cbis.student.student_birthday</code>.
	 */
	public final TableField<StudentRecord, Date> STUDENT_BIRTHDAY = createField("student_birthday", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>cbis.student.student_head_photo</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_HEAD_PHOTO = createField("student_head_photo", org.jooq.impl.SQLDataType.VARCHAR.length(800), this, "");

	/**
	 * The column <code>cbis.student.student_sex</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_SEX = createField("student_sex", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");

	/**
	 * The column <code>cbis.student.student_identity_card</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_IDENTITY_CARD = createField("student_identity_card", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>cbis.student.student_address</code>.
	 */
	public final TableField<StudentRecord, String> STUDENT_ADDRESS = createField("student_address", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>cbis.student.student_introduce_article_info_id</code>.
	 */
	public final TableField<StudentRecord, Integer> STUDENT_INTRODUCE_ARTICLE_INFO_ID = createField("student_introduce_article_info_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>cbis.student</code> table reference
	 */
	public Student() {
		this("student", null);
	}

	/**
	 * Create an aliased <code>cbis.student</code> table reference
	 */
	public Student(String alias) {
		this(alias, STUDENT);
	}

	private Student(String alias, Table<StudentRecord> aliased) {
		this(alias, aliased, null);
	}

	private Student(String alias, Table<StudentRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<StudentRecord, Integer> getIdentity() {
		return Keys.IDENTITY_STUDENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<StudentRecord> getPrimaryKey() {
		return Keys.KEY_STUDENT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<StudentRecord>> getKeys() {
		return Arrays.<UniqueKey<StudentRecord>>asList(Keys.KEY_STUDENT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<StudentRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<StudentRecord, ?>>asList(Keys.STUDENT_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Student as(String alias) {
		return new Student(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Student rename(String name) {
		return new Student(name, null);
	}
}
