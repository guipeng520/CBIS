/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.MailboxSettings;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MailboxSettingsRecord extends UpdatableRecordImpl<MailboxSettingsRecord> implements Record3<Integer, Byte, Integer> {

	private static final long serialVersionUID = -1554618508;

	/**
	 * Setter for <code>cbis.mailbox_settings.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.mailbox_settings.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>cbis.mailbox_settings.switch_email</code>. 是否开户邮箱
	 */
	public void setSwitchEmail(Byte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.mailbox_settings.switch_email</code>. 是否开户邮箱
	 */
	@NotNull
	public Byte getSwitchEmail() {
		return (Byte) getValue(1);
	}

	/**
	 * Setter for <code>cbis.mailbox_settings.daily_limit</code>. 每日限额
	 */
	public void setDailyLimit(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cbis.mailbox_settings.daily_limit</code>. 每日限额
	 */
	public Integer getDailyLimit() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Byte, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Byte, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return MailboxSettings.MAILBOX_SETTINGS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field2() {
		return MailboxSettings.MAILBOX_SETTINGS.SWITCH_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return MailboxSettings.MAILBOX_SETTINGS.DAILY_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value2() {
		return getSwitchEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getDailyLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MailboxSettingsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MailboxSettingsRecord value2(Byte value) {
		setSwitchEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MailboxSettingsRecord value3(Integer value) {
		setDailyLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MailboxSettingsRecord values(Integer value1, Byte value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MailboxSettingsRecord
	 */
	public MailboxSettingsRecord() {
		super(MailboxSettings.MAILBOX_SETTINGS);
	}

	/**
	 * Create a detached, initialised MailboxSettingsRecord
	 */
	public MailboxSettingsRecord(Integer id, Byte switchEmail, Integer dailyLimit) {
		super(MailboxSettings.MAILBOX_SETTINGS);

		setValue(0, id);
		setValue(1, switchEmail);
		setValue(2, dailyLimit);
	}
}
