/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.HeadTypePluginRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HeadTypePlugin extends TableImpl<HeadTypePluginRecord> {

	private static final long serialVersionUID = -960862945;

	/**
	 * The reference instance of <code>cbis.head_type_plugin</code>
	 */
	public static final HeadTypePlugin HEAD_TYPE_PLUGIN = new HeadTypePlugin();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<HeadTypePluginRecord> getRecordType() {
		return HeadTypePluginRecord.class;
	}

	/**
	 * The column <code>cbis.head_type_plugin.id</code>.
	 */
	public final TableField<HeadTypePluginRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.head_type_plugin.type</code>.
	 */
	public final TableField<HeadTypePluginRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

	/**
	 * The column <code>cbis.head_type_plugin.head_type_id</code>.
	 */
	public final TableField<HeadTypePluginRecord, Integer> HEAD_TYPE_ID = createField("head_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>cbis.head_type_plugin</code> table reference
	 */
	public HeadTypePlugin() {
		this("head_type_plugin", null);
	}

	/**
	 * Create an aliased <code>cbis.head_type_plugin</code> table reference
	 */
	public HeadTypePlugin(String alias) {
		this(alias, HEAD_TYPE_PLUGIN);
	}

	private HeadTypePlugin(String alias, Table<HeadTypePluginRecord> aliased) {
		this(alias, aliased, null);
	}

	private HeadTypePlugin(String alias, Table<HeadTypePluginRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<HeadTypePluginRecord, Integer> getIdentity() {
		return Keys.IDENTITY_HEAD_TYPE_PLUGIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<HeadTypePluginRecord> getPrimaryKey() {
		return Keys.KEY_HEAD_TYPE_PLUGIN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<HeadTypePluginRecord>> getKeys() {
		return Arrays.<UniqueKey<HeadTypePluginRecord>>asList(Keys.KEY_HEAD_TYPE_PLUGIN_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<HeadTypePluginRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<HeadTypePluginRecord, ?>>asList(Keys.HEAD_TYPE_PLUGIN_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HeadTypePlugin as(String alias) {
		return new HeadTypePlugin(alias, this);
	}

	/**
	 * Rename this table
	 */
	public HeadTypePlugin rename(String name) {
		return new HeadTypePlugin(name, null);
	}
}
