/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.Major;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MajorRecord extends UpdatableRecordImpl<MajorRecord> implements Record7<Integer, Integer, String, String, String, String, String> {

	private static final long serialVersionUID = -1669435357;

	/**
	 * Setter for <code>cbis.major.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.major.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>cbis.major.tie_id</code>.
	 */
	public void setTieId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.major.tie_id</code>.
	 */
	public Integer getTieId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>cbis.major.major_name</code>.
	 */
	public void setMajorName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cbis.major.major_name</code>.
	 */
	public String getMajorName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cbis.major.major_introduce</code>.
	 */
	public void setMajorIntroduce(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cbis.major.major_introduce</code>.
	 */
	public String getMajorIntroduce() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cbis.major.major_training_goal</code>.
	 */
	public void setMajorTrainingGoal(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cbis.major.major_training_goal</code>.
	 */
	public String getMajorTrainingGoal() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cbis.major.major_trait</code>.
	 */
	public void setMajorTrait(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cbis.major.major_trait</code>.
	 */
	public String getMajorTrait() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>cbis.major.major_foregoer</code>.
	 */
	public void setMajorForegoer(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cbis.major.major_foregoer</code>.
	 */
	public String getMajorForegoer() {
		return (String) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, Integer, String, String, String, String, String> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<Integer, Integer, String, String, String, String, String> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Major.MAJOR.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Major.MAJOR.TIE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Major.MAJOR.MAJOR_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Major.MAJOR.MAJOR_INTRODUCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Major.MAJOR.MAJOR_TRAINING_GOAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Major.MAJOR.MAJOR_TRAIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Major.MAJOR.MAJOR_FOREGOER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTieId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getMajorName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getMajorIntroduce();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getMajorTrainingGoal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getMajorTrait();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getMajorForegoer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value2(Integer value) {
		setTieId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value3(String value) {
		setMajorName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value4(String value) {
		setMajorIntroduce(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value5(String value) {
		setMajorTrainingGoal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value6(String value) {
		setMajorTrait(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord value7(String value) {
		setMajorForegoer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MajorRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MajorRecord
	 */
	public MajorRecord() {
		super(Major.MAJOR);
	}

	/**
	 * Create a detached, initialised MajorRecord
	 */
	public MajorRecord(Integer id, Integer tieId, String majorName, String majorIntroduce, String majorTrainingGoal, String majorTrait, String majorForegoer) {
		super(Major.MAJOR);

		setValue(0, id);
		setValue(1, tieId);
		setValue(2, majorName);
		setValue(3, majorIntroduce);
		setValue(4, majorTrainingGoal);
		setValue(5, majorTrait);
		setValue(6, majorForegoer);
	}
}
